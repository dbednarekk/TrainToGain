# Generated by Django 5.0.6 on 2024-06-30 13:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workouts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and can contain only letters, spaces, and hyphens', regex='^[a-zA-Z][a-zA-Z\\-\\s]{3,50}$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Name must start with a letter and can contain only letters, spaces, and hyphens', regex='^[a-zA-Z][a-zA-Z\\-\\s]{3,50}$')])),
                ('age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be greater than 1'), django.core.validators.MaxValueValidator(limit_value=150, message='Value must be less than 150')])),
                ('height', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be greater than 1'), django.core.validators.MaxValueValidator(limit_value=250, message='Value must be less than 250')])),
                ('weight', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=1, message='Value must be greater than 1'), django.core.validators.MaxValueValidator(limit_value=300, message='Value must be less than 250')])),
                ('picture', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('fav_exercises', models.ManyToManyField(blank=True, to='workouts.exercise')),
                ('workouts', models.ManyToManyField(blank=True, to='workouts.workout')),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Login must be between 3-50 characters and can contain only letters', regex='^([A-Za-z]){3,50}$')])),
                ('password', models.CharField(validators=[django.core.validators.RegexValidator(message='Password must be between 8-50 characters and contain at least one uppercase letter, one lowercase letter, one digit, and one special character', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*\\W).{8,50}$')])),
                ('email', models.EmailField(max_length=50, unique=True, validators=[django.core.validators.EmailValidator(message='Invalid email')])),
                ('active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('user_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
